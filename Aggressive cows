bool isfes(vector<int> &stalls, int k, int mid)    // to check feasibility of assumed answers 
{
int count=1;
   int pos=stalls[0];
   for(int i=1; i<stalls.size() ; i++)
   {
        if(stalls[i]-pos>=mid)
           {
               count++;
               pos=stalls[i];
               if(count==k)
                  return true;
          }
   }
   return false;
}

 

int aggressiveCows(vector<int> &stalls, int k)
{

   //    Write your code here.
   sort(stalls.begin() ,stalls.end() );
   int result = -1;
   int start=1;
   int end=stalls[stalls.size()-1]-stalls[0];
   while(start<=end)
   {
 int mid= (start+end)/2;
       if(isfes(stalls,k,mid))
       {
           result=max(result,mid);
           start=mid+1;
       }
       else{
           end=mid-1;
       }
   }
    return result;    
}

